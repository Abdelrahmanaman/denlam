"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/embla-carousel-class-names";
exports.ids = ["vendor-chunks/embla-carousel-class-names"];
exports.modules = {

/***/ "(ssr)/./node_modules/embla-carousel-class-names/esm/embla-carousel-class-names.esm.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/embla-carousel-class-names/esm/embla-carousel-class-names.esm.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClassNames)\n/* harmony export */ });\nconst defaultOptions = {\n  active: true,\n  breakpoints: {},\n  snapped: 'is-snapped',\n  inView: 'is-in-view',\n  draggable: 'is-draggable',\n  dragging: 'is-dragging'\n};\n\nfunction removeClass(node, className) {\n  if (!node || !className) return;\n  const {\n    classList\n  } = node;\n  if (classList.contains(className)) classList.remove(className);\n}\nfunction addClass(node, className) {\n  if (!node || !className) return;\n  const {\n    classList\n  } = node;\n  if (!classList.contains(className)) classList.add(className);\n}\nfunction nodeListToArray(nodeList) {\n  return Array.from(nodeList);\n}\n\nfunction ClassNames(userOptions = {}) {\n  let options;\n  let emblaApi;\n  let root;\n  let slides;\n  const selectedEvents = ['select'];\n  const draggingEvents = ['pointerDown', 'pointerUp'];\n  const inViewEvents = ['slidesInView'];\n  function init(emblaApiInstance, optionsHandler) {\n    emblaApi = emblaApiInstance;\n    const {\n      mergeOptions,\n      optionsAtMedia\n    } = optionsHandler;\n    const optionsBase = mergeOptions(defaultOptions, ClassNames.globalOptions);\n    const allOptions = mergeOptions(optionsBase, userOptions);\n    options = optionsAtMedia(allOptions);\n    root = emblaApi.rootNode();\n    slides = emblaApi.slideNodes();\n    const isDraggable = !!emblaApi.internalEngine().options.watchDrag;\n    if (isDraggable) {\n      addClass(root, options.draggable);\n    }\n    if (options.dragging) {\n      draggingEvents.forEach(evt => emblaApi.on(evt, toggleDraggingClass));\n    }\n    if (options.snapped) {\n      selectedEvents.forEach(evt => emblaApi.on(evt, toggleSnappedClasses));\n      toggleSnappedClasses();\n    }\n    if (options.inView) {\n      inViewEvents.forEach(evt => emblaApi.on(evt, toggleInViewClasses));\n      toggleInViewClasses();\n    }\n  }\n  function destroy() {\n    removeClass(root, options.draggable);\n    draggingEvents.forEach(evt => emblaApi.off(evt, toggleDraggingClass));\n    selectedEvents.forEach(evt => emblaApi.off(evt, toggleSnappedClasses));\n    inViewEvents.forEach(evt => emblaApi.off(evt, toggleInViewClasses));\n    slides.forEach(slide => removeClass(slide, options.snapped));\n  }\n  function toggleDraggingClass(_, evt) {\n    if (evt === 'pointerDown') addClass(root, options.dragging);else removeClass(root, options.dragging);\n  }\n  function toggleSlideClasses(slideIndexes, className) {\n    const container = emblaApi.containerNode();\n    const slideNodeList = container.querySelectorAll(`.${className}`);\n    const removeClassSlides = nodeListToArray(slideNodeList);\n    removeClassSlides.forEach(slide => removeClass(slide, className));\n    slideIndexes.forEach(index => addClass(slides[index], className));\n  }\n  function toggleSnappedClasses() {\n    const {\n      slideRegistry\n    } = emblaApi.internalEngine();\n    const slideIndexes = slideRegistry[emblaApi.selectedScrollSnap()];\n    toggleSlideClasses(slideIndexes, options.snapped);\n  }\n  function toggleInViewClasses() {\n    const slideIndexes = emblaApi.slidesInView();\n    toggleSlideClasses(slideIndexes, options.inView);\n  }\n  const self = {\n    name: 'classNames',\n    options: userOptions,\n    init,\n    destroy\n  };\n  return self;\n}\nClassNames.globalOptions = undefined;\n\n\n//# sourceMappingURL=embla-carousel-class-names.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZW1ibGEtY2Fyb3VzZWwtY2xhc3MtbmFtZXMvZXNtL2VtYmxhLWNhcm91c2VsLWNsYXNzLW5hbWVzLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0LXNkLy4vbm9kZV9tb2R1bGVzL2VtYmxhLWNhcm91c2VsLWNsYXNzLW5hbWVzL2VzbS9lbWJsYS1jYXJvdXNlbC1jbGFzcy1uYW1lcy5lc20uanM/YzAwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgYWN0aXZlOiB0cnVlLFxuICBicmVha3BvaW50czoge30sXG4gIHNuYXBwZWQ6ICdpcy1zbmFwcGVkJyxcbiAgaW5WaWV3OiAnaXMtaW4tdmlldycsXG4gIGRyYWdnYWJsZTogJ2lzLWRyYWdnYWJsZScsXG4gIGRyYWdnaW5nOiAnaXMtZHJhZ2dpbmcnXG59O1xuXG5mdW5jdGlvbiByZW1vdmVDbGFzcyhub2RlLCBjbGFzc05hbWUpIHtcbiAgaWYgKCFub2RlIHx8ICFjbGFzc05hbWUpIHJldHVybjtcbiAgY29uc3Qge1xuICAgIGNsYXNzTGlzdFxuICB9ID0gbm9kZTtcbiAgaWYgKGNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpKSBjbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG59XG5mdW5jdGlvbiBhZGRDbGFzcyhub2RlLCBjbGFzc05hbWUpIHtcbiAgaWYgKCFub2RlIHx8ICFjbGFzc05hbWUpIHJldHVybjtcbiAgY29uc3Qge1xuICAgIGNsYXNzTGlzdFxuICB9ID0gbm9kZTtcbiAgaWYgKCFjbGFzc0xpc3QuY29udGFpbnMoY2xhc3NOYW1lKSkgY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xufVxuZnVuY3Rpb24gbm9kZUxpc3RUb0FycmF5KG5vZGVMaXN0KSB7XG4gIHJldHVybiBBcnJheS5mcm9tKG5vZGVMaXN0KTtcbn1cblxuZnVuY3Rpb24gQ2xhc3NOYW1lcyh1c2VyT3B0aW9ucyA9IHt9KSB7XG4gIGxldCBvcHRpb25zO1xuICBsZXQgZW1ibGFBcGk7XG4gIGxldCByb290O1xuICBsZXQgc2xpZGVzO1xuICBjb25zdCBzZWxlY3RlZEV2ZW50cyA9IFsnc2VsZWN0J107XG4gIGNvbnN0IGRyYWdnaW5nRXZlbnRzID0gWydwb2ludGVyRG93bicsICdwb2ludGVyVXAnXTtcbiAgY29uc3QgaW5WaWV3RXZlbnRzID0gWydzbGlkZXNJblZpZXcnXTtcbiAgZnVuY3Rpb24gaW5pdChlbWJsYUFwaUluc3RhbmNlLCBvcHRpb25zSGFuZGxlcikge1xuICAgIGVtYmxhQXBpID0gZW1ibGFBcGlJbnN0YW5jZTtcbiAgICBjb25zdCB7XG4gICAgICBtZXJnZU9wdGlvbnMsXG4gICAgICBvcHRpb25zQXRNZWRpYVxuICAgIH0gPSBvcHRpb25zSGFuZGxlcjtcbiAgICBjb25zdCBvcHRpb25zQmFzZSA9IG1lcmdlT3B0aW9ucyhkZWZhdWx0T3B0aW9ucywgQ2xhc3NOYW1lcy5nbG9iYWxPcHRpb25zKTtcbiAgICBjb25zdCBhbGxPcHRpb25zID0gbWVyZ2VPcHRpb25zKG9wdGlvbnNCYXNlLCB1c2VyT3B0aW9ucyk7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnNBdE1lZGlhKGFsbE9wdGlvbnMpO1xuICAgIHJvb3QgPSBlbWJsYUFwaS5yb290Tm9kZSgpO1xuICAgIHNsaWRlcyA9IGVtYmxhQXBpLnNsaWRlTm9kZXMoKTtcbiAgICBjb25zdCBpc0RyYWdnYWJsZSA9ICEhZW1ibGFBcGkuaW50ZXJuYWxFbmdpbmUoKS5vcHRpb25zLndhdGNoRHJhZztcbiAgICBpZiAoaXNEcmFnZ2FibGUpIHtcbiAgICAgIGFkZENsYXNzKHJvb3QsIG9wdGlvbnMuZHJhZ2dhYmxlKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZHJhZ2dpbmcpIHtcbiAgICAgIGRyYWdnaW5nRXZlbnRzLmZvckVhY2goZXZ0ID0+IGVtYmxhQXBpLm9uKGV2dCwgdG9nZ2xlRHJhZ2dpbmdDbGFzcykpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5zbmFwcGVkKSB7XG4gICAgICBzZWxlY3RlZEV2ZW50cy5mb3JFYWNoKGV2dCA9PiBlbWJsYUFwaS5vbihldnQsIHRvZ2dsZVNuYXBwZWRDbGFzc2VzKSk7XG4gICAgICB0b2dnbGVTbmFwcGVkQ2xhc3NlcygpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5pblZpZXcpIHtcbiAgICAgIGluVmlld0V2ZW50cy5mb3JFYWNoKGV2dCA9PiBlbWJsYUFwaS5vbihldnQsIHRvZ2dsZUluVmlld0NsYXNzZXMpKTtcbiAgICAgIHRvZ2dsZUluVmlld0NsYXNzZXMoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICByZW1vdmVDbGFzcyhyb290LCBvcHRpb25zLmRyYWdnYWJsZSk7XG4gICAgZHJhZ2dpbmdFdmVudHMuZm9yRWFjaChldnQgPT4gZW1ibGFBcGkub2ZmKGV2dCwgdG9nZ2xlRHJhZ2dpbmdDbGFzcykpO1xuICAgIHNlbGVjdGVkRXZlbnRzLmZvckVhY2goZXZ0ID0+IGVtYmxhQXBpLm9mZihldnQsIHRvZ2dsZVNuYXBwZWRDbGFzc2VzKSk7XG4gICAgaW5WaWV3RXZlbnRzLmZvckVhY2goZXZ0ID0+IGVtYmxhQXBpLm9mZihldnQsIHRvZ2dsZUluVmlld0NsYXNzZXMpKTtcbiAgICBzbGlkZXMuZm9yRWFjaChzbGlkZSA9PiByZW1vdmVDbGFzcyhzbGlkZSwgb3B0aW9ucy5zbmFwcGVkKSk7XG4gIH1cbiAgZnVuY3Rpb24gdG9nZ2xlRHJhZ2dpbmdDbGFzcyhfLCBldnQpIHtcbiAgICBpZiAoZXZ0ID09PSAncG9pbnRlckRvd24nKSBhZGRDbGFzcyhyb290LCBvcHRpb25zLmRyYWdnaW5nKTtlbHNlIHJlbW92ZUNsYXNzKHJvb3QsIG9wdGlvbnMuZHJhZ2dpbmcpO1xuICB9XG4gIGZ1bmN0aW9uIHRvZ2dsZVNsaWRlQ2xhc3NlcyhzbGlkZUluZGV4ZXMsIGNsYXNzTmFtZSkge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGVtYmxhQXBpLmNvbnRhaW5lck5vZGUoKTtcbiAgICBjb25zdCBzbGlkZU5vZGVMaXN0ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoYC4ke2NsYXNzTmFtZX1gKTtcbiAgICBjb25zdCByZW1vdmVDbGFzc1NsaWRlcyA9IG5vZGVMaXN0VG9BcnJheShzbGlkZU5vZGVMaXN0KTtcbiAgICByZW1vdmVDbGFzc1NsaWRlcy5mb3JFYWNoKHNsaWRlID0+IHJlbW92ZUNsYXNzKHNsaWRlLCBjbGFzc05hbWUpKTtcbiAgICBzbGlkZUluZGV4ZXMuZm9yRWFjaChpbmRleCA9PiBhZGRDbGFzcyhzbGlkZXNbaW5kZXhdLCBjbGFzc05hbWUpKTtcbiAgfVxuICBmdW5jdGlvbiB0b2dnbGVTbmFwcGVkQ2xhc3NlcygpIHtcbiAgICBjb25zdCB7XG4gICAgICBzbGlkZVJlZ2lzdHJ5XG4gICAgfSA9IGVtYmxhQXBpLmludGVybmFsRW5naW5lKCk7XG4gICAgY29uc3Qgc2xpZGVJbmRleGVzID0gc2xpZGVSZWdpc3RyeVtlbWJsYUFwaS5zZWxlY3RlZFNjcm9sbFNuYXAoKV07XG4gICAgdG9nZ2xlU2xpZGVDbGFzc2VzKHNsaWRlSW5kZXhlcywgb3B0aW9ucy5zbmFwcGVkKTtcbiAgfVxuICBmdW5jdGlvbiB0b2dnbGVJblZpZXdDbGFzc2VzKCkge1xuICAgIGNvbnN0IHNsaWRlSW5kZXhlcyA9IGVtYmxhQXBpLnNsaWRlc0luVmlldygpO1xuICAgIHRvZ2dsZVNsaWRlQ2xhc3NlcyhzbGlkZUluZGV4ZXMsIG9wdGlvbnMuaW5WaWV3KTtcbiAgfVxuICBjb25zdCBzZWxmID0ge1xuICAgIG5hbWU6ICdjbGFzc05hbWVzJyxcbiAgICBvcHRpb25zOiB1c2VyT3B0aW9ucyxcbiAgICBpbml0LFxuICAgIGRlc3Ryb3lcbiAgfTtcbiAgcmV0dXJuIHNlbGY7XG59XG5DbGFzc05hbWVzLmdsb2JhbE9wdGlvbnMgPSB1bmRlZmluZWQ7XG5cbmV4cG9ydCB7IENsYXNzTmFtZXMgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW1ibGEtY2Fyb3VzZWwtY2xhc3MtbmFtZXMuZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/embla-carousel-class-names/esm/embla-carousel-class-names.esm.js\n");

/***/ })

};
;